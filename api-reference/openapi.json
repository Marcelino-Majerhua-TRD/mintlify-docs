{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.artisn.desarrollo-redbrand.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v3/productsBy": {
      "get": {
        "summary": "Obtiene productos agrupados por categoría.",
        "description": "Devuelve productos de un proveedor agrupados por categoría.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del proveedor"
          },
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la tienda"
          },
          {
            "name": "channelId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del canal"
          },
          {
            "name": "catalogueId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del catálogo"
          },
          {
            "name": "groupBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["category"]
            },
            "description": "Criterio de agrupación (en este caso, \"category\")"
          },
          {
            "name": "productsByGroup",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Número de productos por grupo"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Tamaño de la respuesta (cantidad de productos)"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["predefined"]
            },
            "description": "Criterio de ordenamiento (en este caso, \"predefined\")"
          },
          {
            "name": "orderMethod",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"]
            },
            "description": "Método de ordenamiento (ascendente o descendente)"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Página de resultados a consultar"
          },
          {
            "name": "includeSchedules",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Incluir horarios en los resultados"
          },
          {
            "name": "validateCategoriesSchedules",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Validar horarios de las categorías"
          }
        ],
        "responses": {
          "200": {
            "description": "Respuesta exitosa con los productos agrupados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID del producto"
                          },
                          "name": {
                            "type": "string",
                            "description": "Nombre del producto"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta"
          },
          "401": {
            "description": "No autorizado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}